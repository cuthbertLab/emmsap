# Generated by Django 5.1.3 on 2024-11-25 20:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=40, null=True, unique=True)),
            ],
            options={
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='SkipGroupCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Composer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_canonical', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('sort_year', models.IntegerField(blank=True, null=True)),
                ('earliest_year', models.IntegerField(blank=True, null=True)),
                ('latest_year', models.IntegerField(blank=True, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.country')),
            ],
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('piece_name', models.CharField(blank=True, max_length=255, null=True)),
                ('frag', models.BooleanField(blank=True, null=True)),
                ('composer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.composer')),
            ],
        ),
        migrations.CreateModel(
            name='Chords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chord_data', models.TextField(blank=True, null=True)),
                ('piece', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.piece')),
            ],
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField(blank=True, null=True)),
                ('measure_start', models.IntegerField(blank=True, null=True)),
                ('measure_end', models.IntegerField(blank=True, null=True)),
                ('encoding_type', models.CharField(max_length=20)),
                ('segment_data', models.CharField(blank=True, max_length=40, null=True)),
                ('ratio_searched', models.BooleanField(default=False)),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.piece')),
            ],
        ),
        migrations.CreateModel(
            name='Ratio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratio', models.SmallIntegerField()),
                ('encoding_type', models.CharField(max_length=20)),
                ('segment1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segment1s', to='emmsap_15.segment')),
                ('segment2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segment2s', to='emmsap_15.segment')),
            ],
        ),
        migrations.CreateModel(
            name='SkipGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True, default='')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='emmsap_15.skipgroupcategory')),
            ],
        ),
        migrations.CreateModel(
            name='SkipPiece',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.piece')),
                ('skip_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.skipgroup')),
            ],
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, max_length=4, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('text_reg', models.TextField(blank=True, null=True)),
                ('text_no_space', models.TextField(blank=True, null=True)),
                ('piece', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.piece')),
            ],
        ),
        migrations.CreateModel(
            name='TinyNotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField(blank=True, null=True)),
                ('ts_ratio', models.CharField(blank=True, max_length=10, null=True)),
                ('tn', models.TextField(blank=True, null=True)),
                ('tn_strip', models.TextField(blank=True, null=True)),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.piece')),
            ],
        ),
        migrations.CreateModel(
            name='Intervals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_id', models.IntegerField(blank=True, null=True)),
                ('intervals', models.TextField(blank=True, null=True)),
                ('intervals_no_unisons', models.TextField(blank=True, null=True)),
                ('intervals_with_rests', models.TextField(blank=True, null=True)),
                ('intervals_one_char', models.TextField(blank=True, null=True)),
                ('piece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emmsap_15.piece')),
            ],
            options={
                'unique_together': {('piece', 'part_id')},
            },
        ),
        migrations.AddIndex(
            model_name='segment',
            index=models.Index(fields=['piece'], name='emmsap_15_s_piece_i_e4c671_idx'),
        ),
        migrations.AddIndex(
            model_name='segment',
            index=models.Index(fields=['encoding_type'], name='emmsap_15_s_encodin_3afb22_idx'),
        ),
        migrations.AddIndex(
            model_name='segment',
            index=models.Index(fields=['part_id'], name='emmsap_15_s_part_id_33465d_idx'),
        ),
        migrations.AddIndex(
            model_name='ratio',
            index=models.Index(fields=['encoding_type'], name='emmsap_15_r_encodin_4f9711_idx'),
        ),
        migrations.AddIndex(
            model_name='ratio',
            index=models.Index(fields=['segment1'], name='emmsap_15_r_segment_e85ea8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='ratio',
            unique_together={('encoding_type', 'segment1', 'segment2')},
        ),
        migrations.AlterUniqueTogether(
            name='tinynotation',
            unique_together={('piece', 'part_id')},
        ),
    ]
